
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class PatientServiceImpl implements PatientService {

    private final PatientRepository repository;

    @Override
    public Patient registerPatient(Patient patient) {
        return repository.save(patient);
    }

    @Override
    public Patient getPatient(Long id) {
        return repository.findById(id)
                .orElseThrow(() -> new PatientNotFoundException("Patient not found with ID: " + id));
    }

    @Override
    public Patient updatePatient(Long id, Patient patient) {
        Patient existing = getPatient(id);
        existing.setFullName(patient.getFullName());
        existing.setPhone(patient.getPhone());
        existing.setEmail(patient.getEmail());
        existing.setInsuranceNumber(patient.getInsuranceNumber());
        existing.setMedicalHistory(patient.getMedicalHistory());
        return repository.save(existing);
    }

    @Override
    public Page<Patient> searchPatients(String query, Pageable pageable) {
        return repository.findByFullNameContainingIgnoreCaseOrPhoneContaining(query, query, pageable);
    }
}