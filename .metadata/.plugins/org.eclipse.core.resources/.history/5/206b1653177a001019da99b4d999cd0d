package com.wipro.gp.services;

import com.wipro.gp.dto.AppointmentDTO;
import com.wipro.gp.dto.MedicalRecordResponse;
import com.wipro.gp.feign.AppointmentClient;
import com.wipro.gp.exception.MedicalRecordNotFoundException;
import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;

@Service
@RequiredArgsConstructor
public class MedicalRecordServiceImpl implements MedicalRecordService {

    private final AppointmentClient appointmentClient;

    @Override
    @CircuitBreaker(name = "appointmentService", fallbackMethod = "addRecordFallback")
    public MedicalRecordResponse addRecordFromAppointment(Long appointmentId, String prescription, MultipartFile file) throws IOException {
        // Call appointment service to get details
        AppointmentDTO appointment = appointmentClient.getAppointmentById(appointmentId);

        if (appointment == null) {
            throw new MedicalRecordNotFoundException("Appointment not found with ID: " + appointmentId);
        }

        // Create and save medical record using appointment's patientId, doctorId, etc.
        MedicalRecordResponse response = new MedicalRecordResponse();
        response.setAppointmentId(appointmentId);
        response.setPatientId(appointment.getPatientId());
        response.setDoctorId(appointment.getDoctorId());
        response.setPrescription(prescription);
        response.setFileName(file != null ? file.getOriginalFilename() : null);

        return response;
    }

    // Fallback method if circuit breaker is OPEN or call fails
    public MedicalRecordResponse addRecordFallback(Long appointmentId, String prescription, MultipartFile file, Throwable ex) {
        MedicalRecordResponse response = new MedicalRecordResponse();
        response.setAppointmentId(appointmentId);
        response.setPrescription(prescription);
        response.setNote("Appointment service is currently unavailable. Record stored without doctor/patient details.");
        return response;
    }
}
