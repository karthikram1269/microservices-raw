package com.wipro.gp.service;

import com.wipro.gp.entities.MedicalRecord;
import com.wipro.gp.exception.MedicalRecordNotFoundException;
import com.wipro.gp.repo.MedicalRecordRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.List;

@Service
@RequiredArgsConstructor
public class MedicalRecordServiceImpl implements MedicalRecordService {

    private final MedicalRecordRepository repository;

    @Override
    public MedicalRecord addRecord(MedicalRecord record) {
        record.setCreatedAt(LocalDateTime.now());
        return repository.save(record);
    }

    @Override
    public List<MedicalRecord> getRecordsByPatientId(Long patientId) {
        List<MedicalRecord> records = repository.findByPatientId(patientId);
        if (records.isEmpty()) {
            throw new MedicalRecordNotFoundException("No records found for patient ID: " + patientId);
        }
        return records;
    }

    @Override
    public MedicalRecord uploadFile(Long patientId, MultipartFile file) throws IOException {
        String uploadDir = "uploads/";
        File directory = new File(uploadDir);
        if (!directory.exists()) {
            directory.mkdirs();
        }
        String filePath = uploadDir + file.getOriginalFilename();
        file.transferTo(new File(filePath));

        MedicalRecord record = MedicalRecord.builder()
                .patientId(patientId)
                .description("Uploaded file: " + file.getOriginalFilename())
                .filePath(filePath)
                .createdAt(LocalDateTime.now())
                .build();

        return repository.save(record);
    }
}
